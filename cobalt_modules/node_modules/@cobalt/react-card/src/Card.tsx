import React, {
  FunctionComponent,
  KeyboardEvent,
  HTMLAttributes,
  Ref,
} from "react";
import cc from "classcat";
import styles from "@cobalt/css-card";

const ENTER_KEY_CODE = "Enter";

export type CardType = HTMLDivElement;

type CardElementAttributes = Pick<
  HTMLAttributes<CardType>,
  "children" | "onClick" | "className" | "style"
>;

export interface Props extends CardElementAttributes {
  /** Only to be triggered by the ENTER key */
  onKeyPress?: HTMLAttributes<CardType>["onKeyPress"];
  outlined?: boolean;
  forwardedRef?: Ref<CardType>;
}

const Card: FunctionComponent<Props> = ({
  className = "",
  forwardedRef,
  outlined,
  onClick,
  onKeyPress,
  ...props
}) => {
  const isClickable = !!onClick || !!onKeyPress;
  const classStyles = {
    [styles["co-card"]]: true,
    [styles["co-card--outlined"]]: outlined,
    [styles["co-card--clickable"]]: isClickable,
    [className]: !!className,
  };
  const handleKeyPress = (e: KeyboardEvent<CardType>) => {
    const { key } = e;

    if (onKeyPress && key === ENTER_KEY_CODE) {
      onKeyPress(e);
    }
  };

  return isClickable ? (
    <div
      className={cc(classStyles)}
      ref={forwardedRef}
      role="button"
      tabIndex={0}
      onClick={onClick}
      onKeyPress={onKeyPress && handleKeyPress}
      {...props}
    />
  ) : (
    <div className={cc(classStyles)} ref={forwardedRef} {...props} />
  );
};

export default Card;
