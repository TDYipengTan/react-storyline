import React, { FunctionComponent, Ref, AnchorHTMLAttributes } from "react";
import cc from "classcat";
import styles from "@cobalt/css-button";
import { Size, Type, Shape, Modifier, classModifiers } from "./Button";

export type LinkButtonType = HTMLAnchorElement;

type LinkAttributes = AnchorHTMLAttributes<LinkButtonType>;

const getClassName = (modifier: Modifier | undefined) =>
  modifier && styles[classModifiers[modifier]];

export interface Props extends LinkAttributes {
  disabled?: boolean;
  shape?: Shape;
  size?: Size;
  type?: Type;
  forwardedRef?: Ref<LinkButtonType>;
}

const LinkButton: FunctionComponent<Props> = ({
  children,
  className = "",
  forwardedRef,
  disabled,
  type = "primary",
  size = "medium",
  shape,
  ...props
}) => {
  const classStyles = [
    styles["co-button"],
    styles["co-button--transparent"],
    styles[classModifiers[type]],
    styles[classModifiers[size]],
    getClassName(shape),
    className
  ];

  return (
    <a
      className={cc(classStyles)}
      ref={forwardedRef}
      data-co-disabled={disabled || undefined}
      aria-disabled={disabled || undefined}
      {...props}
    >
      {children}
    </a>
  );
};

export default LinkButton;
