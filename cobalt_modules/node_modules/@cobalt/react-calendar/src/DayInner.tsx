import React, { FC } from "react";
import cc from "classcat";
import { CallbackDate, Date } from "./types";
import styles from "@cobalt/css-calendar";

const onDayEvent = (date: Date, callback?: CallbackDate) => {
  if (!callback) return;

  return () => {
    callback(date);
  };
};

export interface Props {
  date: Date;
  disabled?: boolean;
  onClick?: CallbackDate;
  onMouseEnter?: CallbackDate;
}

const DayInner: FC<Props> = ({ date, disabled, onClick, onMouseEnter }) => {
  const { day } = date;
  const isSelectable = (onClick || onMouseEnter) && !disabled;

  const classStyles = cc([
    styles["co-calendar__day-inner"],
    {
      [styles["co-calendar__day-inner--selectable"]]: isSelectable
    }
  ]);

  return isSelectable ? (
    <button
      className={classStyles}
      onClick={onDayEvent(date, onClick)}
      onMouseEnter={onDayEvent(date, onMouseEnter)}
    >
      {day}
    </button>
  ) : (
    <span className={classStyles}>{day}</span>
  );
};

export default DayInner;
