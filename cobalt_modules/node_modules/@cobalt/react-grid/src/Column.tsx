import React, { FC, Ref, HTMLAttributes } from "react";
import cc from "classcat";
import styles from "@cobalt/css-grid";
import { ColumnNumber } from "./Grid";
import useResponsiveValue, {
  ResponsiveValue,
} from "@cobalt/react-responsive-value-hook";

type Styles = typeof styles;
type Length = ColumnNumber;

export type ColumnType = HTMLDivElement;

export interface Props extends HTMLAttributes<ColumnType> {
  /**
   * Defines the number of columns the column is supposed to occupy.
   * Use values from 1 to 20, or a tuple with values for the supported viewports.
   */
  length?: ResponsiveValue<Length>;
  /**
   * Defines the position the column is supposed to be placed in.
   * Use values from 1 to 20, or a tuple with values for the supported viewports.
   */
  position?: ResponsiveValue<ColumnNumber>;
  forwardedRef?: Ref<ColumnType>;
}

const Column: FC<Props> = ({
  className = "",
  forwardedRef,
  length,
  position,
  ...props
}) => {
  const rLength = useResponsiveValue(length);
  const rPosition = useResponsiveValue(position);
  const classes = [
    styles["co-grid__column"],
    {
      [styles[`co-grid__column--length-${rLength}` as keyof Styles]]: rLength,
      [styles[`co-grid__column--position-${rPosition}` as keyof Styles]]:
        rPosition,
    },
    className,
  ];

  return <div className={cc(classes)} ref={forwardedRef} {...props} />;
};

export default Column;
