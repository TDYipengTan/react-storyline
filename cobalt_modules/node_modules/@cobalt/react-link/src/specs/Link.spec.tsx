import React from "react";
import { render } from "@testing-library/react";
import Link, { LinkType } from "../Link";

describe("<Link />", () => {
  const linkText = "link";

  it("renders", () => {
    const { container } = render(<Link href="#top">{linkText}</Link>);

    expect(container).toMatchSnapshot();
  });

  it("receives custom attribute", () => {
    const { getByText } = render(
      <Link href="#top" data-test="test">
        {linkText}
      </Link>
    );

    expect(getByText(linkText).getAttribute("data-test")).toEqual("test");
  });

  it("renders with a ref", () => {
    const ref = React.createRef<LinkType>();

    const { getByTestId } = render(
      <Link forwardedRef={ref} href="#top" data-testid="test">
        {linkText}
      </Link>
    );

    expect(getByTestId("test")).toBe(ref.current);
  });

  describe("when target prop is defined", () => {
    it("render the default rel", () => {
      const { getByText } = render(
        <Link href="#top" target="_top">
          {linkText}
        </Link>
      );

      expect(getByText(linkText).getAttribute("rel")).toEqual(
        "noreferrer noopener"
      );
    });

    it("renders a custom rel", () => {
      const { getByText } = render(
        <Link href="#top" target="_blank" rel="nofollow">
          {linkText}
        </Link>
      );

      expect(getByText(linkText).getAttribute("rel")).toEqual("nofollow");
    });
  });
});
