import React, { FunctionComponent, LabelHTMLAttributes, Ref } from "react";
import cc from "classcat";
import styles from "@cobalt/css-label";

type Type = "warning" | "error";

type Styles = typeof styles;

export type LabelType = HTMLLabelElement;

export interface Props extends LabelHTMLAttributes<LabelType> {
  htmlFor: string;
  type?: Type;
  forwardedRef?: Ref<LabelType>;
}

const getModifierClassName = (modifier: string | undefined) =>
  (modifier ? `co-label--${modifier}` : "") as keyof Styles;

const Label: FunctionComponent<Props> = ({
  className = "",
  forwardedRef,
  htmlFor,
  type,
  ...props
}) => {
  const classStyles = {
    [styles["co-label"]]: true,
    [styles[getModifierClassName(type)]]: type,
    [className]: !!className,
  };

  return (
    <label
      className={cc(classStyles)}
      ref={forwardedRef}
      htmlFor={htmlFor}
      {...props}
    />
  );
};

export default Label;
