import React, { FunctionComponent, HTMLAttributes, Ref } from "react";
import cc from "classcat";
import styles from "@cobalt/css-spinner";

type Size = "micro" | "tiny" | "small" | "medium" | "large" | "xlarge";

export type SpinnerType = HTMLElement;

export interface Props extends HTMLAttributes<SpinnerType> {
  size?: Size;
  forwardedRef?: Ref<SpinnerType>;
}

const classModifiers: { [modifier in Size]: keyof typeof styles } = {
  micro: "co-spinner--micro",
  tiny: "co-spinner--tiny",
  small: "co-spinner--small",
  medium: "co-spinner--medium",
  large: "co-spinner--large",
  xlarge: "co-spinner--xlarge",
};

const Spinner: FunctionComponent<Props> = ({
  className = "",
  forwardedRef,
  size = "tiny",
  ...props
}) => {
  const classStyles = cc([
    styles["co-spinner"],
    styles[classModifiers[size]],
    className,
  ]);

  return <i className={classStyles} ref={forwardedRef} {...props} />;
};

export default Spinner;
