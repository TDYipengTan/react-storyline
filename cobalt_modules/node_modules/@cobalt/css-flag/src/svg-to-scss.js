const { parse } = require("svg-parser");
const fs = require("fs");
const prettier = require("prettier");
const readline = require("readline");
const fetch = require("node-fetch");

const generateClasses = parsedSVG => {
  const parent = parsedSVG.children[0];
  const flags = parent.children;
  const { height: parentHeight } = parent.properties;

  const { css } = flags.reduce(
    ({ y, css }, flag) => {
      const { id, height: flagHeight } = flag.properties;
      const updatedCSS =
        css +
        `&--${id}::before { background-position: 0 ${(y /
          (parentHeight - flagHeight)) *
          100}%; }`;

      return { y: y + flagHeight, css: updatedCSS };
    },
    { y: 0, css: "" }
  );

  const formattedCSS = prettier.format(css, { parser: "scss" });

  fs.writeFile(`${__dirname}/_flags.scss`, formattedCSS, () => {
    console.log("Done!");
  });
};

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

rl.question("Assets version: ", version => {
  const PRD_URL = `https://prd-cdn-talkdesk.talkdesk.com/cobalt/assets/${version}/flags/sprite.svg`;

  fetch(PRD_URL)
    .then(response => response.text())
    .then(response => parse(response))
    .then(svg => generateClasses(svg))
    .catch(error => console.error(error));

  rl.close();
});
