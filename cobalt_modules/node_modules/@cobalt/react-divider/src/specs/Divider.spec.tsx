import React from "react";
import { render } from "@testing-library/react";
import Divider, { DividerType } from "../Divider";

describe("<Divider />", () => {
  it("renders a divider", () => {
    const { container } = render(<Divider />);

    expect(container).toMatchSnapshot();
  });

  it("renders a divider with children", () => {
    const { container } = render(<Divider>OR</Divider>);

    expect(container).toMatchSnapshot();
  });

  it("renders with custom attribute", () => {
    const { getByText } = render(<Divider data-test="test">OR</Divider>);

    expect(getByText("OR").getAttribute("data-test")).toEqual("test");
  });

  it("renders with default and custom class", () => {
    const wrapper = render(
      <Divider className="co-hello">Custom className</Divider>
    );

    expect(wrapper.getByText("Custom className").classList.value).toBe(
      "co-divider co-hello"
    );
  });

  it("renders with a ref", () => {
    const ref = React.createRef<DividerType>();

    const { getByTestId } = render(
      <Divider forwardedRef={ref} data-testid="test" />
    );

    expect(getByTestId("test")).toBe(ref.current);
  });

  it("renders a vertical divider when vertical prop is truthy", () => {
    const { getByText } = render(<Divider vertical>OR</Divider>);

    expect(getByText("OR").classList).toContain("co-divider--vertical");
  });
});
