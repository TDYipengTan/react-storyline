import React, { FC, HTMLAttributes, Ref } from "react";
import cc from "classcat";
import styles from "@cobalt/css-table";

export type TableType = HTMLTableElement;
type Borders = "all" | "none";
type Modifiers = Borders;

export interface Props extends HTMLAttributes<TableType> {
  as?: "table" | "div";
  border?: Borders;
  forwardedRef?: Ref<TableType>;
}

const classModifiers: { [k in Modifiers]: keyof typeof styles } = {
  none: "co-table--borderless",
  all: "co-table--bordered"
};

const getClassName = (modifier: Modifiers | undefined) =>
  modifier && styles[classModifiers[modifier]];

const Table: FC<Props> = ({
  className = "",
  forwardedRef,
  as = "table",
  border,
  ...props
}) => {
  const classes = cc([styles["co-table"], getClassName(border), className]);

  const Tag = as;

  return <Tag className={classes} ref={forwardedRef} {...props} />;
};

export default Table;
