import React, { FC, HTMLAttributes, Ref } from "react";
import cc from "classcat";
import styles from "@cobalt/css-table";

export type RowType = HTMLTableRowElement;

type Variation = "theme" | "success" | "warning" | "error" | "feature";

type Styles = typeof styles;

export interface Props extends HTMLAttributes<RowType> {
  as?: "tr" | "div";
  variation?: Variation;
  forwardedRef?: Ref<RowType>;
}

export type ModifiersTypes = Variation;

export const classModifiers: { [k in ModifiersTypes]: keyof Styles } = {
  theme: "co-table__row--theme",
  success: "co-table__row--success",
  warning: "co-table__row--warning",
  error: "co-table__row--error",
  feature: "co-table__row--feature"
};

const getModifierClass = (modifier: ModifiersTypes | undefined) =>
  modifier && styles[classModifiers[modifier]];

const Row: FC<Props> = ({
  className = "",
  forwardedRef,
  as = "tr",
  variation,
  ...props
}) => {
  const classes = cc([
    styles["co-table__row"],
    getModifierClass(variation),
    {
      [styles["co-table__row--clickable"]]: props.onClick
    },
    className
  ]);

  const Tag = as;

  return <Tag className={classes} ref={forwardedRef} {...props} />;
};

export default Row;
