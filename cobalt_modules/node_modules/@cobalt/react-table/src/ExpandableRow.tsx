import React, { FC, ReactNode } from "react";
import cc from "classcat";
import styles from "@cobalt/css-table";
import Row, { Props } from "./Row";
import Cell from "./Cell";

export interface ExpandableProps extends Props {
  onClick: Props["onClick"];
  content: ReactNode;
  expanded?: boolean;
}

const ExpandableRow: FC<Props & ExpandableProps> = ({
  className = "",
  content,
  expanded,
  forwardedRef,
  onClick,
  ...props
}) => {
  const classes = cc([
    {
      [styles["co-table__row--expandable"]]: !expanded,
      [styles["co-table__row--expanded"]]: expanded
    },
    className
  ]);

  const contentClasses = cc([
    styles["co-table__row-content"],
    {
      [styles["co-table__row-content--expanded"]]: expanded
    },
    className
  ]);

  return (
    <>
      <Row
        className={classes}
        onClick={onClick}
        forwardedRef={forwardedRef}
        {...props}
      />
      <tr className={contentClasses}>
        {expanded ? <Cell>{content}</Cell> : null}
      </tr>
    </>
  );
};

export default ExpandableRow;
