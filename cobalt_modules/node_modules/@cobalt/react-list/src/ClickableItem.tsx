import React, { FC, Ref, HTMLAttributes, AnchorHTMLAttributes } from "react";
import cc from "classcat";
import styles from "@cobalt/css-list";

export type ClickableItemType = HTMLAnchorElement;

export interface Props extends AnchorHTMLAttributes<ClickableItemType> {
  onClick: AnchorHTMLAttributes<ClickableItemType>["onClick"];
  disabled?: boolean;
  selected?: boolean;
  forwardedRef?: Ref<ClickableItemType>;
}

interface SpanProps extends HTMLAttributes<HTMLElement> {
  forwardedRef?: Ref<HTMLElement>;
}

const SpanEl: FC<SpanProps> = ({
  children,
  className,
  forwardedRef,
  ...props
}) => {
  return (
    <span
      className={className}
      ref={forwardedRef}
      data-co-disabled
      aria-disabled
      {...props}
    >
      {children}
    </span>
  );
};

const LinkEl: FC<Props> = ({
  children,
  className,
  forwardedRef,
  selected,
  ...props
}) => {
  return (
    <a
      className={className}
      ref={forwardedRef}
      data-co-active={selected || undefined}
      {...props}
    >
      {children}
    </a>
  );
};

const ClickableItem: FC<Props> = ({
  className = "",
  disabled,
  selected,
  onClick,
  ...props
}) => {
  const classes = cc([styles["co-list__link"], className]);

  return (
    <li className={styles["co-list__item"]}>
      {disabled ? (
        <SpanEl className={classes} {...props} />
      ) : (
        <LinkEl
          className={classes}
          onClick={onClick}
          selected={selected}
          {...props}
        />
      )}
    </li>
  );
};

export default ClickableItem;
