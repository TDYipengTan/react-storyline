import React from "react";
import cc from "classcat";
import "./styles.scss";

const TruncatedWrapper = ({ children }) => (
  <div style={{ maxWidth: 250 }}>{children}</div>
);

const Heading = ({ children, tag, asH, truncated, ...props }) => {
  const level = asH || tag;

  const classes = {
    "co-heading": true,
    ["co-heading--" + level]: level,
    "co-heading--truncated": truncated
  };

  return React.createElement(
    `h${tag}`,
    {
      className: cc(classes),
      ...props
    },
    children
  );
};

export const HeadingBasic = () => {
  return [1, 2, 3, 4, 5, 6].map((item, index) => (
    <Heading tag={item} key={index}>
      {`This is an H${item}`}
    </Heading>
  ));
};

export const HeadingsWidthModifiers = () => {
  return [1, 2, 3, 4, 5, 6].map((item, index) => {
    const level = item === 1 ? 2 : 1;

    return (
      <Heading tag={level} asH={item} key={index}>
        {`This is an H${level} with the style of H${item}`}
      </Heading>
    );
  });
};

export const HeadingWithTruncation = () => {
  return (
    <TruncatedWrapper>
      <Heading tag={1} truncated>
        This is a very long title
      </Heading>
    </TruncatedWrapper>
  );
};

export const HeadingSkeleton = () => {
  return (
    <>
      <h1 className="co-heading co-heading--1 co-heading--skeleton">
        This is a random header
      </h1>
      <br />
      <h2 className="co-heading co-heading--2 co-heading--skeleton">
        This is a random header
      </h2>
      <br />
      <h3 className="co-heading co-heading--3 co-heading--skeleton">
        This is a random header
      </h3>
      <br />
      <h4 className="co-heading co-heading--4 co-heading--skeleton">
        This is a random header
      </h4>
      <br />
      <h5 className="co-heading co-heading--5 co-heading--skeleton">
        This is a random header
      </h5>
      <br />
      <h6 className="co-heading co-heading--6 co-heading--skeleton">
        This is a random header
      </h6>
    </>
  );
};

export const HeadingAnimatedSkeleton = () => {
  return (
    <>
      <h1 className="co-heading co-heading--1 co-heading--animated-skeleton">
        This is a random header
      </h1>
      <br />
      <h2 className="co-heading co-heading--2 co-heading--animated-skeleton">
        This is a random header
      </h2>
      <br />
      <h3 className="co-heading co-heading--3 co-heading--animated-skeleton">
        This is a random header
      </h3>
      <br />
      <h4 className="co-heading co-heading--4 co-heading--animated-skeleton">
        This is a random header
      </h4>
      <br />
      <h5 className="co-heading co-heading--5 co-heading--animated-skeleton">
        This is a random header
      </h5>
      <br />
      <h6 className="co-heading co-heading--6 co-heading--animated-skeleton">
        This is a random header
      </h6>
    </>
  );
};

export const Text = () => {
  return (
    <p className="co-text">
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur
      ultricies ut enim non tincidunt. Integer a nulla cursus, bibendum augue
      et, egestas sem. Ut placerat aliquam est vel aliquam. Aliquam malesuada
      gravida orci, sed interdum diam ultricies id.
    </p>
  );
};

export const TextSizes = () => {
  return (
    <>
      <p className="co-text co-text--small">
        SMALL: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        Curabitur ultricies ut enim non tincidunt. Integer a nulla cursus,
        bibendum augue et, egestas sem. Ut placerat aliquam est vel aliquam.
        Aliquam malesuada gravida orci, sed interdum diam ultricies id.
      </p>
      <p className="co-text co-text--medium">
        MEDIUM: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        Curabitur ultricies ut enim non tincidunt. Integer a nulla cursus,
        bibendum augue et, egestas sem. Ut placerat aliquam est vel aliquam.
        Aliquam malesuada gravida orci, sed interdum diam ultricies id.
      </p>
    </>
  );
};

export const TextWeights = () => {
  return (
    <>
      <p className="co-text co-text--weight-light">
        LIGHT: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        Curabitur ultricies ut enim non tincidunt. Integer a nulla cursus,
        bibendum augue et, egestas sem. Ut placerat aliquam est vel aliquam.
        Aliquam malesuada gravida orci, sed interdum diam ultricies id.
      </p>
      <br />
      <p className="co-text co-text--weight-regular">
        REGULAR: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        Curabitur ultricies ut enim non tincidunt. Integer a nulla cursus,
        bibendum augue et, egestas sem. Ut placerat aliquam est vel aliquam.
        Aliquam malesuada gravida orci, sed interdum diam ultricies id.
      </p>
      <br />
      <p className="co-text co-text--weight-medium">
        MEDIUM: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        Curabitur ultricies ut enim non tincidunt. Integer a nulla cursus,
        bibendum augue et, egestas sem. Ut placerat aliquam est vel aliquam.
        Aliquam malesuada gravida orci, sed interdum diam ultricies id.
      </p>
      <br />
      <div style={{ backgroundColor: "#EEE", fontWeight: 500 }}>
        <p className="co-text co-text--weight-inherit">
          INHERIT: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Curabitur ultricies ut enim non tincidunt. Integer a nulla cursus,
          bibendum augue et, egestas sem. Ut placerat aliquam est vel aliquam.
          Aliquam malesuada gravida orci, sed interdum diam ultricies id.
        </p>
      </div>
    </>
  );
};

export const TextInline = () => {
  return (
    <span className="co-text">
      Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    </span>
  );
};

export const TextWithTruncation = () => {
  return (
    <TruncatedWrapper>
      <p className="co-text co-text--truncated">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur
        ultricies ut enim non tincidunt. Integer a nulla cursus, bibendum augue
        et, egestas sem. Ut placerat aliquam est vel aliquam. Aliquam malesuada
        gravida orci, sed interdum diam ultricies id.
      </p>
    </TruncatedWrapper>
  );
};

export const TextSkeleton = () => {
  return (
    <>
      <p className="co-text co-text--small co-text--skeleton"></p>
      <p className="co-text co-text--small co-text--skeleton"></p>
      <p className="co-text co-text--small co-text--skeleton"></p>
      <br />
      <p className="co-text co-text--medium co-text--skeleton"></p>
      <p className="co-text co-text--medium co-text--skeleton"></p>
    </>
  );
};

export const TextAnimatedSkeleton = () => {
  return (
    <>
      <p className="co-text co-text--small co-text--animated-skeleton"></p>
      <p className="co-text co-text--small co-text--animated-skeleton"></p>
      <p className="co-text co-text--small co-text--animated-skeleton"></p>
      <br />
      <p className="co-text co-text--medium co-text--animated-skeleton"></p>
    </>
  );
};

export const Mark = () => {
  return <mark className="co-mark">highlighted</mark>;
};

export const MarkColors = () => {
  return (
    <>
      <p style={{ marginBottom: 4 }}>Yellow</p>
      <mark className="co-mark co-mark--yellow">highlighted</mark>
      <p style={{ marginBottom: 4 }}>Light Yellow</p>
      <mark className="co-mark co-mark--light-yellow">highlighted</mark>
    </>
  );
};

export default { title: "Typography" };
